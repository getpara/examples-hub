import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';
import '../../../config/deep_link_constants.dart';

class WalletConnectDemo extends StatelessWidget {
  const WalletConnectDemo({super.key});
  
  // Example WalletConnect URI for demonstration
  // In production, this would be dynamically generated by the Para SDK
  // when initiating a wallet connection
  static const String _exampleWcUri = 'wc:8a5e5bdc-a0e4-4702-ba63-8f1a5655744f@1?bridge=https%3A%2F%2Fbridge.walletconnect.org&key=41791102999c339c844880b23950704cc43aa840f3739e365323cda4dfa89e7a';

  Future<void> _openWallet(BuildContext context, String walletScheme, String walletName) async {
    final uri = Uri.parse('$walletScheme$_exampleWcUri');
    
    try {
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri, mode: LaunchMode.externalApplication);
      } else {
        if (context.mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(content: Text('$walletName is not installed')),
          );
        }
      }
    } catch (e) {
      if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error opening $walletName: $e')),
        );
      }
    }
  }
  
  Future<void> _testDeepLink(BuildContext context) async {
    // Test our own app's deep link
    final uri = Uri.parse('paraflutter://wallet/connect?address=0x1234567890');
    
    try {
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri);
      } else {
        if (context.mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(content: Text('Deep link test failed')),
          );
        }
      }
    } catch (e) {
      if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error testing deep link: $e')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFFBF9F7),
      appBar: AppBar(
        backgroundColor: const Color(0xFFFBF9F7),
        elevation: 0,
        iconTheme: const IconThemeData(color: Colors.black),
        title: const Text(
          'Wallet Connect Demo',
          style: TextStyle(color: Colors.black),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text(
              'External Wallet Deep Links',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 8),
            const Text(
              'Test opening external wallet apps:',
              style: TextStyle(color: Colors.grey),
            ),
            const SizedBox(height: 24),
            
            // MetaMask
            _WalletButton(
              walletName: 'MetaMask',
              icon: Icons.account_balance_wallet,
              color: const Color(0xFFF6851B),
              onPressed: () => _openWallet(context, DeepLinkConstants.metamaskScheme, 'MetaMask'),
            ),
            const SizedBox(height: 12),
            
            // Trust Wallet
            _WalletButton(
              walletName: 'Trust Wallet',
              icon: Icons.shield,
              color: const Color(0xFF3375BB),
              onPressed: () => _openWallet(context, DeepLinkConstants.trustWalletScheme, 'Trust Wallet'),
            ),
            const SizedBox(height: 12),
            
            // Rainbow
            _WalletButton(
              walletName: 'Rainbow',
              icon: Icons.color_lens,
              color: const Color(0xFF574DDD),
              onPressed: () => _openWallet(context, DeepLinkConstants.rainbowScheme, 'Rainbow'),
            ),
            
            const SizedBox(height: 32),
            const Divider(),
            const SizedBox(height: 32),
            
            const Text(
              'App Deep Link Test',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 8),
            const Text(
              'Test our app\'s deep link handling:',
              style: TextStyle(color: Colors.grey),
            ),
            const SizedBox(height: 16),
            
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () => _testDeepLink(context),
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.black,
                  padding: const EdgeInsets.symmetric(vertical: 16),
                ),
                child: const Text(
                  'Test paraflutter:// Deep Link',
                  style: TextStyle(color: Colors.white),
                ),
              ),
            ),
            
            const SizedBox(height: 24),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.blue[50],
                borderRadius: BorderRadius.circular(8),
                border: Border.all(color: Colors.blue[300]!),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  const Text(
                    'How Deep Linking Works',
                    style: TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 14,
                    ),
                  ),
                  const SizedBox(height: 8),
                  const Text(
                    '1. External Wallets: When you tap a wallet button above, it opens the wallet app with a WalletConnect URI.\n\n'
                    '2. App Deep Links: The paraflutter:// scheme allows other apps to open specific screens in this app.\n\n'
                    '3. Para SDK Integration: The SDK automatically handles authentication callbacks using deep links.\n\n'
                    'Note: This is a demo. In production, the Para SDK generates dynamic WalletConnect URIs.',
                    style: TextStyle(fontSize: 12),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class _WalletButton extends StatelessWidget {
  final String walletName;
  final IconData icon;
  final Color color;
  final VoidCallback onPressed;

  const _WalletButton({
    required this.walletName,
    required this.icon,
    required this.color,
    required this.onPressed,
  });

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: double.infinity,
      child: ElevatedButton(
        onPressed: onPressed,
        style: ElevatedButton.styleFrom(
          backgroundColor: color,
          padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12),
          ),
        ),
        child: Row(
          children: [
            Icon(icon, color: Colors.white),
            const SizedBox(width: 12),
            Text(
              'Open $walletName',
              style: const TextStyle(
                color: Colors.white,
                fontSize: 16,
                fontWeight: FontWeight.w500,
              ),
            ),
            const Spacer(),
            const Icon(
              Icons.open_in_new,
              color: Colors.white,
              size: 20,
            ),
          ],
        ),
      ),
    );
  }
}